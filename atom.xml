<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kur0mi&#39;s blog</title>
  
  <subtitle>step by step</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.nightmare.xin/"/>
  <updated>2017-10-23T14:58:16.108Z</updated>
  <id>https://blog.nightmare.xin/</id>
  
  <author>
    <name>kur0mi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>神奇的西操(1)</title>
    <link href="https://blog.nightmare.xin/test5.html"/>
    <id>https://blog.nightmare.xin/test5.html</id>
    <published>2017-10-23T13:56:59.000Z</published>
    <updated>2017-10-23T14:58:16.108Z</updated>
    
    <content type="html"><![CDATA[<h1 id="回忆"><a href="#回忆" class="headerlink" title="回忆"></a>回忆</h1><p>翻一翻以前的日记，大概从9.15开始的<br><img src="http://store.nightmare.xin/81448138f5f163ccdba4acc69819f280.png" alt=""><br>以前也试图坚持过，但总是很难坚持下来，这次一个月已经过去了，也算是小有成就吧。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>坚持锻炼不仅是体重减轻，肉肉减掉，强化身体防猝死，于我而言时刻提醒我去坚持梦想不放弃，还有最最最最重要的，晚上睡觉踏实多了(也许是我换了个枕头的缘故？)，远离修仙，从我做起。</p><p>ps: 听说瘦下来会变帅 Orz.</p>]]></content>
    
    <summary type="html">
    
      纪念坚持跑步一个月
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>记一次搭建博客全过程</title>
    <link href="https://blog.nightmare.xin/test4.html"/>
    <id>https://blog.nightmare.xin/test4.html</id>
    <published>2017-10-23T10:33:38.000Z</published>
    <updated>2017-10-23T14:58:22.710Z</updated>
    
    <content type="html"><![CDATA[<h1 id="最初的悸动"><a href="#最初的悸动" class="headerlink" title="最初的悸动"></a>最初的悸动</h1><p>每个学计算机的都应该萌生过搭建个人网站或写博客的想法吧。其一当然是觉得建站很牛逼，写博客的都是大佬；其二这个过程对自己也是很不错的锻炼和成长。</p><p>这里插一个小故事，再次感慨一下程序员之间的鄙视链，后端鄙视前端，开发鄙视运维（此处略去几万字）。大一上学期，一次上课某老师对我们说，前端就是做做网站，没什么技术含量的啊，反正那老师对前端很是鄙视的样子。。</p><p>大一下学期接触了一些网络编程，恰逢阿里有活动，十几块钱送1核2G的服务器ecs实例一个+对象存储+各种数据库+负载均衡全家桶六个月+VIP版云解析一年和一个价值不错的万网域名代金券，于是我就拥有了一个ubuntu服务器和一个域名。C++课设写的网络双人对战版中国象棋v1.0就是用服务器做媒介(仅仅用来获取一方IP交给另一方然后双方建立socket连接，还是很渣的)来完成的。做完之后自信心很膨胀啊就想搭建个人网站了无非就是写一些html放在服务器上让其他人去访问嘛，管他搭建好之后做什么，先搭建起来玩玩。然后看了一些html教程，内容不难，但自己写就是不会…看网上什么五分钟急速建站教程，用wordpress搭建网站，弄完hello页面就没碰过了。</p><p>然后是学python，在codewars(一个刷题网站)把py级别刷到2kyu，听说可以用python实现个人网站，前端页面后端数据库手动一行一行写，听的是热血沸腾…于是本辣鸡的大一就这么过去了。</p><p>大二知识面广了一些后会经常搜索一些东西，会搜到一些写的很不错的博客，一开始是CSDN博客，后来是博客园，然后是简书，然后就是各种炫酷的个人博客了。然后是现在的CTF小队他们都有自己的博客@Primykq<a href="http://qrzbing.cn/" target="_blank" rel="external">链接</a>和@a-Lie-Z<a href="http://qrzbing.cn/" target="_blank" rel="external">链接</a>，主要是看了曾老师的超级炫酷的博客<a href="https://www.rexskz.info/" target="_blank" rel="external">链接</a>就又想搭一个了，这次就一次性搭建好了。</p><h1 id="搭建开始"><a href="#搭建开始" class="headerlink" title="搭建开始"></a>搭建开始</h1><p>我的个人博客使用的是hexo+github pages搭建，这个只需要按着教程一步一步走就好了，<a href="http://www.jianshu.com/p/ab21abc31153" target="_blank" rel="external">参考链接</a>。手上正巧还有一个(还有几个月过期)的域名，顺手在域名服务商做了CNAME解析到自己的github pages</p><h1 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h1><p>网上有一些hexo美化的教程，但做出来的效果不太满意，有些高难度的操作起来又总是出错，干脆自己折腾吧。</p><p><img src="http://store.nightmare.xin/54324234.png" alt=""></p><p>选用了next主题，折腾了两天还是有点效果的。</p><p>基础的一些配置在hexo根目录下的_config.yml文件中，主题配置在themes/next/_config.yml中，一些个性化配置则需要修改主题目录下的source目录。</p><p>source目录下有css, fonts, images, js, lib五个文件夹，修改颜色背景标题栏大小挂件之类的样式需要去修改css，其他四个文件夹存储渲染页面需要用到的字体，图片，js特效和依赖文件。</p><p>我做的修改如下(均在css文件夹中)：</p><p>在_custom/custom.styl添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">// Custom styles.</div><div class="line">body &#123; </div><div class="line">    background: url(/images/GOQS6G4LH2Z1_1000x500.jpg);</div><div class="line">    background-size: cover;</div><div class="line">    background-repeat: no-repeat;</div><div class="line">    background-attachment: fixed;</div><div class="line">    background-position: center;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>这样就有了背景图。但是next的Pisces不支持文本半透明，导致图片大部分被遮住了，于是继续修改_schemes/Pisces文件夹。我基本是看到什么改什么，打开hexo s –debug本地调试，一点一点的改，里面碰到一些变量我找了好久找不到它在哪里，比如这样的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.content-wrap &#123;</div><div class="line">  float: right;</div><div class="line">  box-sizing: border-box;</div><div class="line">  padding: $content-desktop-padding;</div><div class="line">  width: $content-desktop;</div><div class="line">  min-height: 700px;</div></pre></td></tr></table></figure></p><p>于是，，碰到这种变量不知道是什么值我又特别想改，，就直接改了，终于在我的不懈努力下改完了！</p><p>但是！！！最终在我打开variables文件夹后心态崩溃了，里面base.styl(基本样式)和Pisces.styl(Pisces特有的样式)存储了所有这些变量还附带了说明，我如同一个白痴晕晕乎乎瞎改了一遍，在那么一瞬间都想重装next了，想想毕竟是自己的成果，还是就这样吧，何必自己为难自己…</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>本来想写成一篇技术博客的，不知不觉就成了流水账，一是菜二是懒，唉，就当成随笔吧。</p>]]></content>
    
    <summary type="html">
    
      今天我翻新了我的博客外观(没错，就是你们现在看到的这样子)，吃饱喝足之后，干脆和我搭建博客的过程一起记录一下吧
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>快速获取markdown图片链接</title>
    <link href="https://blog.nightmare.xin/test3.html"/>
    <id>https://blog.nightmare.xin/test3.html</id>
    <published>2017-10-22T14:39:47.000Z</published>
    <updated>2017-10-23T14:58:31.269Z</updated>
    
    <content type="html"><![CDATA[<h1 id="markdown简介"><a href="#markdown简介" class="headerlink" title="markdown简介"></a>markdown简介</h1><p>Markdown 是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：John Gruber）。它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML(或者HTML)文档”。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性，被称作“「电子邮件」风格的「标记语言」”。</p><p>markdown语法参考<a href="http://www.jianshu.com/p/q81RER" target="_blank" rel="external">链接</a></p><h1 id="七牛云简介"><a href="#七牛云简介" class="headerlink" title="七牛云简介"></a>七牛云简介</h1><p>这里主要使用七牛云作为图床————也就是互联网上的一处空间————来存储markdown需要的图片。</p><h1 id="autohotkey-python简介"><a href="#autohotkey-python简介" class="headerlink" title="autohotkey+python简介"></a>autohotkey+python简介</h1><p>autohotkey使用一种极为简便的语法来创建脚本自定义热键，python同样以简洁的语法和强大的功能著称，两者配合就可以使用热键快速的解决很多复杂问题。</p><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><p>设置快捷键，实现一键<strong>上传图片到七牛云存储，并复制外链到剪切板</strong>，避免编写markdown文档时<strong>打开七牛云+上传图片+复制外链</strong>的繁杂操作。</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><h2 id="autohotkey脚本"><a href="#autohotkey脚本" class="headerlink" title="autohotkey脚本"></a>autohotkey脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">^!c::</div><div class="line">send, ^c</div><div class="line">clipwait</div><div class="line">Run cmd /k &quot;Python d:\QQPCmgr\Desktop\toolbox\script\ahk\upload_qiniu.py %Clipboard% &amp;ECHO. &amp;PAUSE &amp;EXIT&quot;</div><div class="line">return</div></pre></td></tr></table></figure><h2 id="python脚本"><a href="#python脚本" class="headerlink" title="python脚本"></a>python脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">#-*- coding: utf-8 -*-</div><div class="line">import os</div><div class="line">import sys</div><div class="line">from qiniu import Auth, put_file</div><div class="line"></div><div class="line">access_key = &quot;AK&quot; # 填入你的AK</div><div class="line">secret_key = &quot;SK&quot; # 填入你的SK</div><div class="line">bucket_name = &quot;BUCKET_NAME&quot; # 填入你的七牛空间名称</div><div class="line">url = &quot;URL&quot; # 填入你的域名地址</div><div class="line">qiniu = Auth(access_key, secret_key)</div><div class="line"></div><div class="line">def upload_qiniu(path):</div><div class="line">    dirname, filename = os.path.split(path)</div><div class="line">    key = filename</div><div class="line">    policy = &#123;</div><div class="line">        &quot;scope&quot; : &quot;%s:%s&quot; % (bucket_name, key)</div><div class="line">    &#125;</div><div class="line">    token = qiniu.upload_token(bucket_name, key = key, policy = policy)</div><div class="line">    ret, info = put_file(token, key, path)</div><div class="line">    return ret != None and ret[&apos;key&apos;] == key</div><div class="line"></div><div class="line">def addToClipBoard(text):</div><div class="line">    command = &apos;echo &apos; + text.strip() + &apos;| clip&apos;</div><div class="line">    os.system(command)</div><div class="line"></div><div class="line">if __name__ == &apos;__main__&apos;:</div><div class="line">    path = sys.argv[1]</div><div class="line">    name = os.path.split(path)[1]</div><div class="line">    markdown_url = &quot;![](%s/%s)&quot; % (url, name)</div><div class="line">    # make it to clipboard</div><div class="line">    addToClipBoard(markdown_url)</div><div class="line">    print markdown_url</div><div class="line">    </div><div class="line">    ret = upload_qiniu(path)</div><div class="line">    if ret:</div><div class="line">        print &quot;upload_succeed&quot;</div><div class="line">    else:</div><div class="line">        print &quot;upload_failed&quot;</div></pre></td></tr></table></figure><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>nothing… </p><p>ps: 第一次写这种博客，时间也有点匆忙，以后有时间再改改吧。</p>]]></content>
    
    <summary type="html">
    
      使用autohotkey自定义热键，并通过利用python脚本强大的处理能力，实现一键处理功能
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2017年南航CTF校赛</title>
    <link href="https://blog.nightmare.xin/test2.html"/>
    <id>https://blog.nightmare.xin/test2.html</id>
    <published>2017-10-22T02:46:26.000Z</published>
    <updated>2017-10-23T14:57:49.646Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CTF校赛"><a href="#CTF校赛" class="headerlink" title="CTF校赛"></a>CTF校赛</h1><p>本来想趁着学校大佬们都去打天翼杯，然后校赛混个奖什么的，然而，哈哈没有然而，确实被我们混到了，排名第四，校内队伍第二。 作为第一次参加这种 <strong>比较</strong> 正式的比赛也是一个好的开始。</p><p>最出乎意料的是，这次比赛比预想中难了好多好多好多。差点心态就炸了，不过还好队友们相互鼓励还是坚持了下来。</p><p>现在将这次比赛过程记录如下：</p><h2 id="MISC1-–"><a href="#MISC1-–" class="headerlink" title="MISC1 ++–"></a>MISC1 ++–</h2><p>看到问题立马想到了BrainFuck，然而打开一看却是各种颜文字…</p><p>参考文章: <a href="https://qing.su/article/119.html，" target="_blank" rel="external">https://qing.su/article/119.html，</a></p><p>注意到BrainFuck的结构，观察前部结构：</p><p>‘<strong>( ͡° ͜ʖ ͡°)</strong>‘由’<strong>+</strong>‘替代;</p><p>‘<strong>( ͡°(</strong>‘由’<strong>[</strong>‘替代，对应地，’<strong>) ͡°)</strong>‘由’<strong>]</strong>‘替代;</p><p>‘<strong>ᕦ( ͡°ヮ ͡°)ᕥ</strong>‘由’<strong>&gt;</strong>‘替代。</p><p>之后观察后面的结构：</p><p>‘<strong>(&gt; ͜ʖ(∩ ͡° ͜ʖ ͡°)⊃━☆ﾟ.*)</strong>‘由’<strong>.</strong>‘替代;</p><p>‘<strong>(♥ ͜ʖ♥)</strong>‘由’<strong>-</strong>‘替代;</p><p>‘<strong>(∩ ͡° ͜ʖ ͡°)⊃━☆ﾟ.*</strong>‘由’<strong>&lt;</strong>‘替代。</p><p>至此，我们可以得到正确的BrainFuck表达式</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span></div><div class="line"><span class="title">[</span>&gt;<span class="literal">+</span>&gt;<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&gt;<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&gt;<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&lt;&lt;&lt;&lt;<span class="literal">-</span><span class="title">]</span></div><div class="line">&gt;&gt;&gt;&gt;<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="string">.</span></div><div class="line"><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="string">.</span></div><div class="line"><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="string">.</span><span class="string">.</span></div><div class="line"><span class="literal">+</span><span class="literal">+</span><span class="string">.</span></div><div class="line"><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="string">.</span></div><div class="line"><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="string">.</span></div><div class="line"><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="string">.</span></div><div class="line"><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="string">.</span></div><div class="line"><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="string">.</span></div><div class="line">&lt;<span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="string">.</span></div><div class="line"><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="string">.</span></div><div class="line">&gt;<span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="string">.</span></div><div class="line"><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="string">.</span></div><div class="line"><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="string">.</span></div><div class="line"><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="string">.</span></div><div class="line"><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="string">.</span></div><div class="line"><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="string">.</span></div><div class="line"><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="string">.</span></div><div class="line">&lt;<span class="string">.</span></div><div class="line">&gt;<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="string">.</span></div><div class="line"><span class="literal">-</span><span class="literal">-</span><span class="string">.</span></div><div class="line"><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="string">.</span></div></pre></td></tr></table></figure><p>在网站: <a href="https://sange.fi/esoteric/brainfuck/impl/interp/i.html" target="_blank" rel="external">https://sange.fi/esoteric/brainfuck/impl/interp/i.html</a> 上解密，得到flag</p><p><img src="http://oxhwf4emp.bkt.clouddn.com/NUAACTF_Brainfuck.png" alt=""></p><h2 id="MISC3-recover"><a href="#MISC3-recover" class="headerlink" title="MISC3 recover"></a>MISC3 recover</h2><p>（吐槽一下，在chrome输flag，没有选中的话是看不见的。。。）</p><p>下载后发现是个png图片，但打不开</p><p>第一反应是去改文件头，还是选择先strings一下</p><p>然后就有了点惊喜</p><p><img src="https://ws1.sinaimg.cn/large/006OSALLgy1fkq1rmhz6ej30sn03bq2v.jpg" alt=""></p><p>瞄了一眼已解决列表，卧槽，已经7个队伍了，论抢一血的重要性哇</p><p>话说300分是不是多了点。。。。。。</p><h2 id="web50"><a href="#web50" class="headerlink" title="web50"></a>web50</h2><p>因为每道题的一血(第一个做出来的)有额外加分嘛，然后就准备抢一血。 刷新网页，点开sign-in题，右键源码，找到flag，提交，失败…而且输入框也有问题，不能显示。 然后过了几分钟，应该是被主办方修好了，我们运气不错拿到了一血。</p><h2 id="web100"><a href="#web100" class="headerlink" title="web100"></a>web100</h2><p>题目是sign-up，点开题目地址，主要有<strong>注册</strong>，<strong>登录</strong>，<strong>注销</strong>三个功能。试了一下随便注册一个账号都可以登录。一时没有其他思路就用awvs扫了一下，扫出来一个index.php.bak和scehma.sql文件，基本确定应该是属于源码泄露的题。然后对着源码开始审计，发现需要修改一个字段，试着用 <strong>me’ union select 1#</strong> 注入失败，一直到比赛结束都没做出来… 感觉这里应该是有过滤。</p><h2 id="web150"><a href="#web150" class="headerlink" title="web150"></a>web150</h2><p><img src="http://oxm4hc2s3.bkt.clouddn.com/3.png" alt=""></p><p>题目循环检测alert并删除，试了各种编码无效，去做web300的时候才想到jsfuck编码，可以绕过检测并且由js解析。</p><p>当然要先闭合前边的引号，后边可以闭合或直接注释掉。</p><h2 id="web200"><a href="#web200" class="headerlink" title="web200"></a>web200</h2><p>这道题就是真的坑了，参数 <strong>?file=flag</strong> 没有显示任何内容，试着%00截断返回错误信息，包括文件包含路径<strong>include_path=’/usr/local/php’</strong>和当前路径<strong>/app/xxx/index.php</strong>。</p><p>然后当我输入绝对路径就会显示</p><blockquote><p>you want to search with root path, huh?</p></blockquote><p>输入相对路径就显示</p><blockquote><p>you want to search with apparent path, huh?</p></blockquote><p>那个 <strong>huh</strong> 真是巨嘲讽，各种尝试都失败了，最后也没做出来，赛后才知道只需要用 <strong>php://filter/read=convert.base64-encode/resource=flag</strong> 就可以了，，我记得我当时这样试过，但貌似哪里出错了就放弃了。还是经验不够。</p><h2 id="web300"><a href="#web300" class="headerlink" title="web300"></a>web300</h2><p>这就是这次比赛最开心的一道题了，进去之后发现正则匹配对输入进行了过滤，’[^[]!+]+/g’，也就是说只能使用 <strong>[]!+</strong> 四个字符进行构造，eval(input)可以对input进行js解析，综合题意，只要可以使用eval(input)构造出’alert’字符串即可。</p><p>一开始当然直接jsfuck，然后由于 <strong>()</strong> 被过滤掉了就fail了。然后各种困惑，各种google之后，get到jsfuck的编码方式，就解开了本题。记录如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">以下内容基于</div><div class="line">[]      =&gt;  []</div><div class="line"></div><div class="line">然后!可以将类型转化为布尔型</div><div class="line">![]     =&gt;  false</div><div class="line">!![]    =&gt;  true</div><div class="line"></div><div class="line">+可以将类型转化为整形</div><div class="line">+![]    =&gt;  0</div><div class="line">+!![]   =&gt;  1</div><div class="line">!![]+!![]   =&gt;  2 </div><div class="line"></div><div class="line">然后+[]可以转化为字符串</div><div class="line">![]+[]  =&gt;  &apos;false&apos;</div><div class="line"></div><div class="line">类似于数组取下标</div><div class="line">(![]+[])[+!![]] =&gt;  &apos;a&apos;</div><div class="line"></div><div class="line">然后就可以类似的从&apos;false&apos;, &apos;true&apos;中读出&apos;a&apos;,&apos;l&apos;,&apos;e&apos;,&apos;r&apos;,&apos;t&apos;。</div><div class="line"></div><div class="line">em...但是...题目过滤了小括号。需要绕一下</div><div class="line">![]+[]  =&gt;  &apos;false&apos;</div><div class="line">[![]+[]]    =&gt;  [&apos;false&apos;]</div><div class="line">[![]+[]][+[]]    =&gt;  &apos;false&apos;</div><div class="line">[![]+[]][+[]][+!![]]    =&gt;  &apos;a&apos;</div><div class="line"></div><div class="line">最后用加号拼起来即可。</div><div class="line">这题最后一半靠蒙，\笑哭\笑哭</div></pre></td></tr></table></figure><p>截图如下：<br><img src="http://oxm4hc2s3.bkt.clouddn.com/4.png" alt=""></p><p><img src="http://oxm4hc2s3.bkt.clouddn.com/2.png" alt=""></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>开心，也有点小遗憾吧，路还很长啊。</p>]]></content>
    
    <summary type="html">
    
      趁着学校大佬们都去打天翼杯，然后校赛混了个第四名
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>第四届世安杯比赛</title>
    <link href="https://blog.nightmare.xin/test.html"/>
    <id>https://blog.nightmare.xin/test.html</id>
    <published>2017-10-21T01:43:47.000Z</published>
    <updated>2017-10-23T14:58:42.978Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第四届世安杯划水日记"><a href="#第四届世安杯划水日记" class="headerlink" title="第四届世安杯划水日记"></a>第四届世安杯划水日记</h1><p>两位队友的文章 @a-lie-Z<a href="http://qrzbing.cn/2017/CTF_WriteUp171008.html#more" target="_blank" rel="external">链接地址</a> 和 @primykq<a href="https://primykq.top/2017/10/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E4%B8%96%E5%AE%89%E6%9D%AF%E9%85%B1%E6%B2%B9%E8%AE%B0/" target="_blank" rel="external">链接地址</a></p><h2 id="ctf入门级题目"><a href="#ctf入门级题目" class="headerlink" title="ctf入门级题目"></a>ctf入门级题目</h2><p>ereg传入数组时不会返回FALSE，strpos传入数组也不会反回FALSE…</p><p>此外ereg还可以使用%00截断</p><h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><p>php代码审计的题，很喜欢</p><p>对于x1，注意到case 0后边没有break，直接传入<strong>x1=0</strong>即可</p><p>对于x2，构造json字符串。其中x21不能为数字且x21&gt;”2017”，传入<strong>x21=2018a</strong>。x22出题点应该是array_search是弱比较，只需要有一个键为0，就可以绕过。</p><p>对于x3，直接md5碰撞，脚本大概长这样…<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$a = &apos;1&apos;;</div><div class="line">$s = &apos;XIPU&apos;;</div><div class="line">while(1)</div><div class="line">&#123;</div><div class="line">    $x3 = $s + $a;</div><div class="line">    substr(md5($x3),8,16) == substr(md5(&apos;15562&apos;),8,16)?die($x3):$a++;</div><div class="line">&#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p>右键查看源码发现提示，密码为五位数字，想到爆破。看一下验证码，猜想应该是第一次请求会生成vcode并保存在session，后面每一次请求与保存的vcode比对并生成新的vcode。所以写脚本每次请求需要带入phpsessid（一开始没注意导致一直抓不到验证vcode的页面，还以为出bug了…）</p><p>基于此，写python脚本爆破，这里又踩了一个坑，没错，我是从10000开始爆破的，五位数字…只想说人生经验还不够丰富</p><p>好像burp可以用intruder模块直接爆破，有一个选项是可以使用返回的页面作为下一次请求的参数，很适合这个题。</p><h2 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h2><p>php://input伪协议+未处理的post数据绕过第一层，然后利用include+php://filter/read=convert.base64-encode/class.php读源码，这里很好奇无法读取flag.php。</p><p>先读取index.php发现对$file参数做了过滤.构造序列化字符串（其中需要给一个变量赋值），然后程序执行echo调用_toString，就可以getflag。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>然后就…没有了。 </p><p>不说了，虽然菜，但还是玩的很开心的。</p><p>ps: 希望下午校赛可以取得好成绩</p>]]></content>
    
    <summary type="html">
    
      本来没写的，看到两位队友都写了，就顺手记录一下吧，整理在一起做个纪念
    
    </summary>
    
    
  </entry>
  
</feed>
